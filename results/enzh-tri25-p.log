./prepare_un_data.sh: line 73: :
echo "Downloading and extracting Commoncrawl data (919 MB) for training..."
wget --trust-server-names http://www.statmt.org/wmt13/training-parallel-commoncrawl.tgz
tar zxvf training-parallel-commoncrawl.tgz
ls | grep -v commoncrawl.de-en.[de,en] | xargs rm

echo "Downloading and extracting Europarl data (658 MB) for training..."
wget --trust-server-names http://www.statmt.org/wmt13/training-parallel-europarl-v7.tgz
tar zxvf training-parallel-europarl-v7.tgz
cd training && ls | grep -v europarl-v7.de-en.[de,en] | xargs rm
cd .. && mv training/europarl* . && rm -r training training-parallel-europarl-v7.tgz

echo "Downloading and extracting News Commentary data (76 MB) for training..."
wget --trust-server-names http://data.statmt.org/wmt16/translation-task/training-parallel-nc-v11.tgz
tar zxvf training-parallel-nc-v11.tgz
cd training-parallel-nc-v11 && ls | grep -v news-commentary-v11.de-en.[de,en] | xargs rm
cd .. && mv training-parallel-nc-v11/* . && rm -r training-parallel-nc-v11 training-parallel-nc-v11.tgz

# Validation and test data are put into the $DATA_PATH/test folder
echo "Downloading and extracting newstest2014 data (4 MB) for validation..."
wget --trust-server-names http://www.statmt.org/wmt14/test-filtered.tgz
echo "Downloading and extracting newstest2017 data (5 MB) for testing..."
wget --trust-server-names http://data.statmt.org/wmt17/translation-task/test.tgz
tar zxvf test-filtered.tgz && tar zxvf test.tgz
cd test && ls | grep -v .*deen|.*ende | xargs rm
cd .. && rm test-filtered.tgz test.tgz && cd ..
: No such file or directory
File ‘data/wmt/test/input-from-sgm.perl’ already there; not retrieving.
./prepare_un_data.sh: Training sentencepiece model
sentencepiece_trainer.cc(79) LOG(INFO) Starts training with : 
trainer_spec {
  input: data/wmt/train.txt
  input_format: 
  model_prefix: data/wmt/wmtenzh
  model_type: UNIGRAM
  vocab_size: 32000
  self_test_sample_size: 0
  character_coverage: 1
  input_sentence_size: 0
  shuffle_input_sentence: 1
  seed_sentencepiece_size: 1000000
  shrinking_factor: 0.75
  max_sentence_length: 4192
  num_threads: 16
  num_sub_iterations: 2
  max_sentencepiece_length: 16
  split_by_unicode_script: 1
  split_by_number: 1
  split_by_whitespace: 1
  split_digits: 0
  treat_whitespace_as_suffix: 0
  required_chars: 
  byte_fallback: 0
  vocabulary_output_piece_score: 1
  train_extremely_large_corpus: 1
  hard_vocab_limit: 1
  use_all_vocab: 0
  unk_id: 0
  bos_id: 1
  eos_id: 2
  pad_id: -1
  unk_piece: <unk>
  bos_piece: <s>
  eos_piece: </s>
  pad_piece: <pad>
  unk_surface:  ⁇ 
}
normalizer_spec {
  name: nmt_nfkc
  add_dummy_prefix: 1
  remove_extra_whitespaces: 1
  escape_whitespaces: 1
  normalization_rule_tsv: 
}
denormalizer_spec {}
trainer_interface.cc(320) LOG(INFO) SentenceIterator is not specified. Using MultiFileSentenceIterator.
trainer_interface.cc(175) LOG(INFO) Loading corpus: data/wmt/train.txt
trainer_interface.cc(347) LOG(WARNING) Found too long line (4390 > 4192).
trainer_interface.cc(349) LOG(WARNING) Too long lines are skipped in the training.
trainer_interface.cc(350) LOG(WARNING) The maximum length can be changed with --max_sentence_length=<size> flag.
trainer_interface.cc(137) LOG(INFO) Loaded 1000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 2000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 3000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 4000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 5000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 6000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 7000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 8000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 9000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 10000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 11000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 12000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 13000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 14000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 15000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 16000000 lines
tcmalloc: large alloc 1342177280 bytes == 0x563561394000 @ 
trainer_interface.cc(137) LOG(INFO) Loaded 17000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 18000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 19000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 20000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 21000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 22000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 23000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 24000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 25000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 26000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 27000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 28000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 29000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 30000000 lines
trainer_interface.cc(137) LOG(INFO) Loaded 31000000 lines
trainer_interface.cc(112) LOG(WARNING) Too many sentences are loaded! (31771981), which may slow down training.
trainer_interface.cc(114) LOG(WARNING) Consider using --input_sentence_size=<size> and --shuffle_input_sentence=true.
trainer_interface.cc(117) LOG(WARNING) They allow to randomly sample <size> sentences from the entire corpus.
trainer_interface.cc(376) LOG(INFO) Loaded all 31771981 sentences
trainer_interface.cc(382) LOG(INFO) Skipped 101 too long sentences.
trainer_interface.cc(391) LOG(INFO) Adding meta_piece: <unk>
trainer_interface.cc(391) LOG(INFO) Adding meta_piece: <s>
trainer_interface.cc(391) LOG(INFO) Adding meta_piece: </s>
trainer_interface.cc(396) LOG(INFO) Normalizing sentences...
trainer_interface.cc(457) LOG(INFO) all chars count=3694875767
trainer_interface.cc(468) LOG(INFO) Done: 100% characters are covered.
trainer_interface.cc(478) LOG(INFO) Alphabet size=7489
trainer_interface.cc(479) LOG(INFO) Final character coverage=1
trainer_interface.cc(511) LOG(INFO) Done! preprocessed 31771981 sentences.
tcmalloc: large alloc 2147483648 bytes == 0x5637e636a000 @ 
tcmalloc: large alloc 4294967296 bytes == 0x563866c16000 @ 
tcmalloc: large alloc 8589934592 bytes == 0x563966c16000 @ 
tcmalloc: large alloc 17179869184 bytes == 0x563b67416000 @ 
tcmalloc: large alloc 29559013376 bytes == 0x563f68416000 @ 
tcmalloc: large alloc 29559013376 bytes == 0x56464c1c2000 @ 
tcmalloc: large alloc 29559013376 bytes == 0x564d2f76e000 @ 
tcmalloc: large alloc 29559013376 bytes == 0x56541351a000 @ 
unigram_model_trainer.cc(138) LOG(INFO) Making suffix array...
unigram_model_trainer.cc(142) LOG(INFO) Extracting frequent sub strings...
unigram_model_trainer.cc(193) LOG(INFO) Initialized 1000000 seed sentencepieces
trainer_interface.cc(517) LOG(INFO) Tokenizing input sentences with whitespace: 31771981
trainer_interface.cc(527) LOG(INFO) Done! 2553171
unigram_model_trainer.cc(488) LOG(INFO) Using 2553171 sentences for EM training
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=592282 obj=11.96 num_tokens=7417225 num_tokens/piece=12.5231
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=496564 obj=9.29985 num_tokens=7407467 num_tokens/piece=14.9174
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=372414 obj=9.28033 num_tokens=7509033 num_tokens/piece=20.1631
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=372326 obj=9.27875 num_tokens=7514347 num_tokens/piece=20.1822
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=279242 obj=9.28406 num_tokens=7724981 num_tokens/piece=27.6641
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=279239 obj=9.28365 num_tokens=7724448 num_tokens/piece=27.6625
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=209429 obj=9.29148 num_tokens=7962000 num_tokens/piece=38.0177
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=209429 obj=9.29107 num_tokens=7960855 num_tokens/piece=38.0122
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=157071 obj=9.30234 num_tokens=8218361 num_tokens/piece=52.3226
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=157071 obj=9.3011 num_tokens=8217268 num_tokens/piece=52.3156
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=117803 obj=9.31739 num_tokens=8513299 num_tokens/piece=72.2673
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=117803 obj=9.31481 num_tokens=8512418 num_tokens/piece=72.2598
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=88352 obj=9.33847 num_tokens=8900195 num_tokens/piece=100.736
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=88352 obj=9.33452 num_tokens=8900376 num_tokens/piece=100.738
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=66264 obj=9.36993 num_tokens=9301310 num_tokens/piece=140.367
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=66264 obj=9.36397 num_tokens=9301640 num_tokens/piece=140.372
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=49698 obj=9.418 num_tokens=9791343 num_tokens/piece=197.017
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=49698 obj=9.40864 num_tokens=9791370 num_tokens/piece=197.017
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=37273 obj=9.49148 num_tokens=10400645 num_tokens/piece=279.04
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=37273 obj=9.47659 num_tokens=10400520 num_tokens/piece=279.036
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=0 size=35200 obj=9.49568 num_tokens=10527607 num_tokens/piece=299.08
unigram_model_trainer.cc(504) LOG(INFO) EM sub_iter=1 size=35200 obj=9.49239 num_tokens=10528031 num_tokens/piece=299.092
trainer_interface.cc(605) LOG(INFO) Saving model: data/wmt/wmtenzh.model
trainer_interface.cc(616) LOG(INFO) Saving vocabs: data/wmt/wmtenzh.vocab
